{"version":3,"sources":["components/Feedback/Feedback.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","className","styles","btn","type","name","onClick","shortid","generate","Section","title","children","Statistic","good","neutral","bad","total","positiveFeedback","Notification","message","notification","App","state","e","target","setState","prevState","handlerTotal","Math","round","this","objKey","Object","keys","wrapper","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKACAA,EAAOC,QAAU,CAAC,QAAU,0BAA0B,KAAO,uBAAuB,aAAe,+BAA+B,IAAM,sBAAsB,KAAO,uBAAuB,QAAU,0BAA0B,IAAM,wB,uKC0BvNC,EAtBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBACEC,UAAWC,IAAOC,IAElBC,KAAK,SACLC,KAAML,EACNM,QAASR,EALX,SAOGE,GALIO,IAAQC,kBCMRC,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIV,UAAWC,IAAOG,KAAtB,SAA6BK,IAC5BC,MCaQC,EAlBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,iBAA9B,OAChB,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,uCAAUC,KACV,oDAAuBC,EAAvB,WCGWC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,qBAAKlB,UAAWC,IAAOkB,aAAvB,SAAsCD,KCG1BE,E,4MACnBC,MAAQ,CAAET,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpCjB,gBAAkB,SAAAyB,GAChB,IAAMlB,EAAOkB,EAAEC,OAAOnB,KACtB,EAAKoB,UAAS,SAAAC,GAAS,sBACpBrB,EAAOqB,EAAUrB,GAAQ,O,EAI9BsB,aAAe,WACb,MAA+B,EAAKL,MACpC,OADA,EAAQT,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBE,iBAAmB,WACjB,IAAMD,EAAQ,EAAKW,eACnB,OAAOC,KAAKC,MAAyB,IAAlB,EAAKP,MAAMT,KAAcG,I,4CAG9C,WACE,IAAMA,EAAQc,KAAKH,eACbV,EAAmBa,KAAKb,mBACxBc,EAASC,OAAOC,KAAKH,KAAKR,OAEhC,OACE,sBAAKrB,UAAWC,IAAOgC,QAAvB,UACE,cAAC,EAAD,CAASxB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEb,QAASkC,EACTjC,gBAAiBgC,KAAKhC,oBAIf,IAAVkB,EACC,cAAC,EAAD,CAAcG,QAAQ,sBAEtB,cAAC,EAAD,CAAST,MAAM,aAAf,SACE,cAAC,EAAD,CACEG,KAAMiB,KAAKR,MAAMT,KACjBC,QAASgB,KAAKR,MAAMR,QACpBC,IAAKe,KAAKR,MAAMP,IAChBC,MAAOA,EACPC,iBAAkBA,a,GA3CCkB,aCHjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fad5e42a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Feedback_wrapper__2GEXt\",\"name\":\"Feedback_name__3dqp0\",\"notification\":\"Feedback_notification__3GAL3\",\"btn\":\"Feedback_btn__2l22B\",\"good\":\"Feedback_good__3ddyw\",\"neutral\":\"Feedback_neutral__1M_3N\",\"bad\":\"Feedback_bad__2sWDd\"};","import React from 'react';\nimport shortid from 'shortid';\nimport styles from '../Feedback/Feedback.module.css';\nimport PropTypes from 'prop-types';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map(option => (\n        <button\n          className={styles.btn}\n          key={shortid.generate()}\n          type=\"button\"\n          name={option}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.array.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\nexport default FeedbackOptions;\n","import React from 'react';\nimport styles from '../Feedback/Feedback.module.css';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2 className={styles.name}>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.any.isRequired,\n};\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistic = ({ good, neutral, bad, total, positiveFeedback }) => (\n  <div>\n    <p>Good: {good}</p>\n    <p>Neutral: {neutral}</p>\n    <p>Bad: {bad}</p>\n    <p>Total:{total}</p>\n    <p>Positive feedback: {positiveFeedback}%</p>\n  </div>\n);\n\nStatistic.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positiveFeedback: PropTypes.number.isRequired,\n};\n\nexport default Statistic;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../Feedback/Feedback.module.css';\n\nconst Notification = ({ message }) => {\n  return <div className={styles.notification}>{message}</div>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport './App.css';\nimport styles from './components/Feedback/Feedback.module.css';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default class App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  onLeaveFeedback = e => {\n    const name = e.target.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  handlerTotal = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  positiveFeedback = () => {\n    const total = this.handlerTotal();\n    return Math.round((this.state.good * 100) / total);\n  };\n\n  render() {\n    const total = this.handlerTotal();\n    const positiveFeedback = this.positiveFeedback();\n    const objKey = Object.keys(this.state);\n\n    return (\n      <div className={styles.wrapper}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={objKey}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Section title=\"Statistics\">\n            <Statics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={total}\n              positiveFeedback={positiveFeedback}\n            />\n          </Section>\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}